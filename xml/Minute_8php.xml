<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="Minute_8php" kind="file" language="PHP">
    <compoundname>Minute.php</compoundname>
    <innerclass refid="classFactom_1_1Api_1_1Minute" prot="public">Factom::Api::Minute</innerclass>
    <innernamespace refid="namespaceFactom_1_1Api">Factom::Api</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">&lt;?php<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceFactom_1_1Api" kindref="compound">Factom\Api</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Client" kindref="compound">PhpJsonRpc\Client</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Client_1_1RequestBuilder_1_1BuilderContainer" kindref="compound">PhpJsonRpc\Client\RequestBuilder\BuilderContainer</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Client_1_1ResponseParser_1_1ParserContainer" kindref="compound">PhpJsonRpc\Client\ResponseParser\ParserContainer</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Client_1_1Transport_1_1TransportContainer" kindref="compound">PhpJsonRpc\Client\Transport\TransportContainer</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Common_1_1Interceptor_1_1Interceptor" kindref="compound">PhpJsonRpc\Common\Interceptor\Interceptor</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Core_1_1Invoke_1_1Invoke" kindref="compound">PhpJsonRpc\Core\Invoke\Invoke</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Error_1_1BaseClientException" kindref="compound">PhpJsonRpc\Error\BaseClientException</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Error_1_1InvalidResponseException" kindref="compound">PhpJsonRpc\Error\InvalidResponseException</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Error_1_1MethodNotFoundException" kindref="compound">PhpJsonRpc\Error\MethodNotFoundException</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Tests_1_1Mock_1_1IdGenerator" kindref="compound">PhpJsonRpc\Tests\Mock\IdGenerator</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">use<sp/><ref refid="namespacePhpJsonRpc_1_1Tests_1_1Mock_1_1Transport" kindref="compound">PhpJsonRpc\Tests\Mock\Transport</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classFactom_1_1Api_1_1Minute" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFactom_1_1Api_1_1Minute" kindref="compound">Minute</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current-minute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>currentMinute()</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$client<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Client(host);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$client-&gt;getResponseParser()-&gt;onPreParse()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;add(Interceptor::createWith(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>(ParserContainer<sp/>$container)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$response<sp/>=<sp/>$container-&gt;getValue();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$result<sp/>=<sp/>$response[</highlight><highlight class="stringliteral">&apos;result&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$response[</highlight><highlight class="stringliteral">&apos;result&apos;</highlight><highlight class="normal">]<sp/>=<sp/>$response;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ParserContainer($container-&gt;getParser(),<sp/>$response);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$result<sp/>=<sp/>$client-&gt;call(</highlight><highlight class="stringliteral">&apos;current-minute&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json_encode($result);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">?&gt;</highlight></codeline>
    </programlisting>
    <location file="src/Factom/Api/Minute.php"/>
  </compounddef>
</doxygen>
